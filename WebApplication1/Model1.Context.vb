'------------------------------------------------------------------------------
' <auto-generated>
'     Este código se generó a partir de una plantilla.
'
'     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
'     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class FechaExpiraciónEntities
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=FechaExpiraciónEntities")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Overridable Property CatReworkOrders() As DbSet(Of CatReworkOrder)
    Public Overridable Property CatReworkStatus() As DbSet(Of CatReworkStatu)
    Public Overridable Property CatUnits() As DbSet(Of CatUnit)

    Public Overridable Function spED_CatReworkOrders_Delete(idCatReworkOrders As Nullable(Of System.Guid)) As Integer
        Dim idCatReworkOrdersParameter As ObjectParameter = If(idCatReworkOrders.HasValue, New ObjectParameter("IdCatReworkOrders", idCatReworkOrders), New ObjectParameter("IdCatReworkOrders", GetType(System.Guid)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spED_CatReworkOrders_Delete", idCatReworkOrdersParameter)
    End Function

    Public Overridable Function spED_CatReworkOrders_Insert(workOrder As String, area As String, isRework As Nullable(Of Boolean), isActive As Nullable(Of Boolean), createdBy As String) As Integer
        Dim workOrderParameter As ObjectParameter = If(workOrder IsNot Nothing, New ObjectParameter("WorkOrder", workOrder), New ObjectParameter("WorkOrder", GetType(String)))

        Dim areaParameter As ObjectParameter = If(area IsNot Nothing, New ObjectParameter("Area", area), New ObjectParameter("Area", GetType(String)))

        Dim isReworkParameter As ObjectParameter = If(isRework.HasValue, New ObjectParameter("IsRework", isRework), New ObjectParameter("IsRework", GetType(Boolean)))

        Dim isActiveParameter As ObjectParameter = If(isActive.HasValue, New ObjectParameter("IsActive", isActive), New ObjectParameter("IsActive", GetType(Boolean)))

        Dim createdByParameter As ObjectParameter = If(createdBy IsNot Nothing, New ObjectParameter("CreatedBy", createdBy), New ObjectParameter("CreatedBy", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spED_CatReworkOrders_Insert", workOrderParameter, areaParameter, isReworkParameter, isActiveParameter, createdByParameter)
    End Function

    Public Overridable Function spED_CatReworkOrders_Select(catReworkOrders As Nullable(Of System.Guid)) As ObjectResult(Of spED_CatReworkOrders_Select_Result)
        Dim catReworkOrdersParameter As ObjectParameter = If(catReworkOrders.HasValue, New ObjectParameter("CatReworkOrders", catReworkOrders), New ObjectParameter("CatReworkOrders", GetType(System.Guid)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spED_CatReworkOrders_Select_Result)("spED_CatReworkOrders_Select", catReworkOrdersParameter)
    End Function

    Public Overridable Function spED_CatReworkOrders_SelectAll() As ObjectResult(Of spED_CatReworkOrders_SelectAll_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spED_CatReworkOrders_SelectAll_Result)("spED_CatReworkOrders_SelectAll")
    End Function

    Public Overridable Function spED_CatReworkOrders_Update(idCatReworkOrders As Nullable(Of System.Guid), workOrder As String, area As String, isRework As Nullable(Of Boolean), modifiedBy As String) As Integer
        Dim idCatReworkOrdersParameter As ObjectParameter = If(idCatReworkOrders.HasValue, New ObjectParameter("IdCatReworkOrders", idCatReworkOrders), New ObjectParameter("IdCatReworkOrders", GetType(System.Guid)))

        Dim workOrderParameter As ObjectParameter = If(workOrder IsNot Nothing, New ObjectParameter("WorkOrder", workOrder), New ObjectParameter("WorkOrder", GetType(String)))

        Dim areaParameter As ObjectParameter = If(area IsNot Nothing, New ObjectParameter("Area", area), New ObjectParameter("Area", GetType(String)))

        Dim isReworkParameter As ObjectParameter = If(isRework.HasValue, New ObjectParameter("IsRework", isRework), New ObjectParameter("IsRework", GetType(Boolean)))

        Dim modifiedByParameter As ObjectParameter = If(modifiedBy IsNot Nothing, New ObjectParameter("ModifiedBy", modifiedBy), New ObjectParameter("ModifiedBy", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spED_CatReworkOrders_Update", idCatReworkOrdersParameter, workOrderParameter, areaParameter, isReworkParameter, modifiedByParameter)
    End Function

    Public Overridable Function spED_CatReworkStatus_Delete(idCatReworkStatus As Nullable(Of System.Guid)) As Integer
        Dim idCatReworkStatusParameter As ObjectParameter = If(idCatReworkStatus.HasValue, New ObjectParameter("IdCatReworkStatus", idCatReworkStatus), New ObjectParameter("IdCatReworkStatus", GetType(System.Guid)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spED_CatReworkStatus_Delete", idCatReworkStatusParameter)
    End Function

    Public Overridable Function spED_CatReworkStatus_Insert(sAPStatus As String, isRework As Nullable(Of Boolean), isActive As Nullable(Of Boolean), createdBy As String) As Integer
        Dim sAPStatusParameter As ObjectParameter = If(sAPStatus IsNot Nothing, New ObjectParameter("SAPStatus", sAPStatus), New ObjectParameter("SAPStatus", GetType(String)))

        Dim isReworkParameter As ObjectParameter = If(isRework.HasValue, New ObjectParameter("IsRework", isRework), New ObjectParameter("IsRework", GetType(Boolean)))

        Dim isActiveParameter As ObjectParameter = If(isActive.HasValue, New ObjectParameter("IsActive", isActive), New ObjectParameter("IsActive", GetType(Boolean)))

        Dim createdByParameter As ObjectParameter = If(createdBy IsNot Nothing, New ObjectParameter("CreatedBy", createdBy), New ObjectParameter("CreatedBy", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spED_CatReworkStatus_Insert", sAPStatusParameter, isReworkParameter, isActiveParameter, createdByParameter)
    End Function

    Public Overridable Function spED_CatReworkStatus_Select(idCatReworkStatus As Nullable(Of System.Guid)) As ObjectResult(Of spED_CatReworkStatus_Select_Result)
        Dim idCatReworkStatusParameter As ObjectParameter = If(idCatReworkStatus.HasValue, New ObjectParameter("IdCatReworkStatus", idCatReworkStatus), New ObjectParameter("IdCatReworkStatus", GetType(System.Guid)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spED_CatReworkStatus_Select_Result)("spED_CatReworkStatus_Select", idCatReworkStatusParameter)
    End Function

    Public Overridable Function spED_CatReworkStatus_SelectAll() As Integer
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spED_CatReworkStatus_SelectAll")
    End Function

    Public Overridable Function spED_CatReworkStatus_Update(idCatReworkStatus As Nullable(Of System.Guid), sAPStatus As String, isRework As Nullable(Of Boolean), modifiedBy As String) As Integer
        Dim idCatReworkStatusParameter As ObjectParameter = If(idCatReworkStatus.HasValue, New ObjectParameter("IdCatReworkStatus", idCatReworkStatus), New ObjectParameter("IdCatReworkStatus", GetType(System.Guid)))

        Dim sAPStatusParameter As ObjectParameter = If(sAPStatus IsNot Nothing, New ObjectParameter("SAPStatus", sAPStatus), New ObjectParameter("SAPStatus", GetType(String)))

        Dim isReworkParameter As ObjectParameter = If(isRework.HasValue, New ObjectParameter("IsRework", isRework), New ObjectParameter("IsRework", GetType(Boolean)))

        Dim modifiedByParameter As ObjectParameter = If(modifiedBy IsNot Nothing, New ObjectParameter("ModifiedBy", modifiedBy), New ObjectParameter("ModifiedBy", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spED_CatReworkStatus_Update", idCatReworkStatusParameter, sAPStatusParameter, isReworkParameter, modifiedByParameter)
    End Function

    Public Overridable Function spED_CatUnits_Delete(idCatUnits As Nullable(Of System.Guid)) As Integer
        Dim idCatUnitsParameter As ObjectParameter = If(idCatUnits.HasValue, New ObjectParameter("IdCatUnits", idCatUnits), New ObjectParameter("IdCatUnits", GetType(System.Guid)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spED_CatUnits_Delete", idCatUnitsParameter)
    End Function

    Public Overridable Function spED_CatUnits_Insert(unit As String, unitValue As Nullable(Of Short), isActive As Nullable(Of Boolean), createdBy As String) As Integer
        Dim unitParameter As ObjectParameter = If(unit IsNot Nothing, New ObjectParameter("Unit", unit), New ObjectParameter("Unit", GetType(String)))

        Dim unitValueParameter As ObjectParameter = If(unitValue.HasValue, New ObjectParameter("UnitValue", unitValue), New ObjectParameter("UnitValue", GetType(Short)))

        Dim isActiveParameter As ObjectParameter = If(isActive.HasValue, New ObjectParameter("IsActive", isActive), New ObjectParameter("IsActive", GetType(Boolean)))

        Dim createdByParameter As ObjectParameter = If(createdBy IsNot Nothing, New ObjectParameter("CreatedBy", createdBy), New ObjectParameter("CreatedBy", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spED_CatUnits_Insert", unitParameter, unitValueParameter, isActiveParameter, createdByParameter)
    End Function

    Public Overridable Function spED_CatUnits_Select(idCatUnits As Nullable(Of System.Guid)) As ObjectResult(Of spED_CatUnits_Select_Result)
        Dim idCatUnitsParameter As ObjectParameter = If(idCatUnits.HasValue, New ObjectParameter("IdCatUnits", idCatUnits), New ObjectParameter("IdCatUnits", GetType(System.Guid)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spED_CatUnits_Select_Result)("spED_CatUnits_Select", idCatUnitsParameter)
    End Function

    Public Overridable Function spED_CatUnits_SelectAll() As ObjectResult(Of spED_CatUnits_SelectAll_Result)
        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of spED_CatUnits_SelectAll_Result)("spED_CatUnits_SelectAll")
    End Function

    Public Overridable Function spED_CatUnits_Update(idCatUnits As Nullable(Of System.Guid), unit As String, unitValue As Nullable(Of Short), modifiedBy As String) As Integer
        Dim idCatUnitsParameter As ObjectParameter = If(idCatUnits.HasValue, New ObjectParameter("IdCatUnits", idCatUnits), New ObjectParameter("IdCatUnits", GetType(System.Guid)))

        Dim unitParameter As ObjectParameter = If(unit IsNot Nothing, New ObjectParameter("Unit", unit), New ObjectParameter("Unit", GetType(String)))

        Dim unitValueParameter As ObjectParameter = If(unitValue.HasValue, New ObjectParameter("UnitValue", unitValue), New ObjectParameter("UnitValue", GetType(Short)))

        Dim modifiedByParameter As ObjectParameter = If(modifiedBy IsNot Nothing, New ObjectParameter("ModifiedBy", modifiedBy), New ObjectParameter("ModifiedBy", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("spED_CatUnits_Update", idCatUnitsParameter, unitParameter, unitValueParameter, modifiedByParameter)
    End Function

End Class
